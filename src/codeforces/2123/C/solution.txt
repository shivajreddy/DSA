7 2 4 1
- can you eliminate all nums except current
- if num is either min or max, then possible
- so, is it possible to make current number a min or max

base case: when vec has 2 nums, both can satisfy the conditions, any numbers, any order.


idx :  0 1 2 3 4 5 6
vec :  _ 1 3 5 4 7 2
pre :  _ _ _ _ _ _ _    # create this many slots
pre :  M M M M M M M    # fill with infinity(INT_MAX) 
pre :  M 1 1 1 1 1 1    # pre[i] = min(pre[i-1], v[i])
suf :  _ _ _ _ _ _ _ _  # create these many slots 
suf :  0 0 0 0 0 0 0 0  # fill with 0, cuz lowest num is 1
suf :  _ 7 7 7 7 7 2 _  # suf[i] = max(suf[i+1], v[i])


- now for each num in v, 
  if num == pre[i], or num == suf[i]
  then this number can be basically consume that entire side
  i.e., if it was == pre[i] then all the numbers on the left 
  until the current number could be prefixed with min.
  similarly, if it was == suf[i] all numbers on the right
  side can sufixed with max.
  - and the other side can be sufixed/prefixed, leavingn with
    with base case which is 2 number vec

1 2 3 4 5 6 7
1 0 0 0 0 0 1

1 3 5 4 7 2
1 0 0 0 1 1

1 3 5 4 7 2     1,7
1 2
2

13 10 12 20
1  1  0  1

3 4 2 3 1
1 1 2 3 1
1 1 2 

